---
# Deploy Portainer

- name: Create Portainer directory
  file:
    path: "{{ portainer_dir }}"
    state: directory
    mode: '0755'

- name: Create Portainer data volume
  community.docker.docker_volume:
    name: portainer_data
    state: present

- name: Create Portainer agent network
  community.docker.docker_network:
    name: portainer_agent_network
    driver: bridge
    internal: true

- name: Check if Portainer password file exists
  stat:
    path: "{{ portainer_dir }}/.portainer_password_set"
  register: portainer_password_file

- name: Load password from file if exists
  slurp:
    src: "{{ portainer_dir }}/.portainer_password_set"
  register: portainer_password_slurp
  when: portainer_password_file.stat.exists

- name: Set password from saved file
  set_fact:
    portainer_admin_password: "{{ portainer_password_slurp['content'] | b64decode | trim }}"
  when: portainer_password_file.stat.exists and portainer_password_slurp is defined

- name: Check if Portainer admin password is provided
  pause:
    prompt: "Enter a password for the Portainer admin user"
  register: portainer_password_prompt
  no_log: true
  when: 
    - portainer_admin_password == ""
    - not portainer_password_file.stat.exists

- name: Set Portainer admin password from prompt
  set_fact:
    portainer_admin_password: "{{ portainer_password_prompt.user_input }}"
  no_log: true
  when: 
    - portainer_admin_password == "" 
    - portainer_password_prompt.user_input is defined
    - not portainer_password_file.stat.exists

- name: Generate Portainer admin password hash
  set_fact:
    # Create a bcrypt hash using Ansible's built-in filter
    portainer_hash: "{{ portainer_admin_password | password_hash('bcrypt') }}"
    # Escape dollar signs for Docker Compose by replacing $ with $$
    portainer_escaped_hash: "{{ portainer_admin_password | password_hash('bcrypt') | replace('$', '$$') }}"
  no_log: true
  when: portainer_admin_password != ""

- name: Save password to file
  copy:
    content: "{{ portainer_admin_password }}"
    dest: "{{ portainer_dir }}/.portainer_password_set"
    mode: '0600'
  when: 
    - portainer_admin_password != ""
    - not portainer_password_file.stat.exists

- name: Deploy Portainer compose file
  template:
    src: portainer-compose.yml.j2
    dest: "{{ portainer_dir }}/docker-compose.yml"
    mode: '0644'

- name: Launch Portainer stack
  community.docker.docker_compose_v2:
    project_src: "{{ portainer_dir }}"
    state: present
    pull: "always"

- name: Check if Portainer container is running
  command: docker ps -q -f name=portainer
  register: portainer_container
  changed_when: false
  retries: 5
  delay: 5
  until: portainer_container.stdout != "" 