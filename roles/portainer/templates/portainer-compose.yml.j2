services:
  portainer:
    image: {{ portainer_image }}
    container_name: portainer
    restart: always
    security_opt:
      - no-new-privileges:true
    networks:
      - traefik_network
      - portainer_agent_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    # Resource limits
    mem_limit: 512M
    cpus: 0.5
{% if portainer_admin_password != "" %}
    command: --admin-password '{{ portainer_escaped_hash }}' --no-analytics
{% else %}
    command: --no-analytics
{% endif %}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`{{ portainer_subdomain }}.{{ domains[0].domain }}`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=le"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  # Portainer Agent - for Portainer to manage this Docker node
  agent:
    image: {{ portainer_agent_image }}
    container_name: portainer-agent
    restart: always
    security_opt:
      - no-new-privileges:true
    networks:
      - portainer_agent_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - /:/host:ro
    # Resource limits
    mem_limit: 256M
    cpus: 0.3
    environment:
      - LOG_LEVEL=INFO

volumes:
  portainer_data:
    external: true

networks:
  traefik_network:
    external: true
  portainer_agent_network:
    internal: true # Only internal access for agent network 